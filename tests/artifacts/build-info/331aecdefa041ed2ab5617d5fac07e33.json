{
	"id": "331aecdefa041ed2ab5617d5fac07e33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/IfDemo.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.15;\n\ncontract IfDemo {\n\n    function andCondition(uint256 a, uint256 b) public pure returns (uint256) {\n        if (a > 1 && b > 1) {\n            return a;\n        }\n        return 0;\n    }\n\n    function tierCondition(uint256 a, uint256 b) public pure returns (uint256){\n        if (a > 1) {\n            if (b > 1) {\n                return a;\n            }\n        }\n        return 0;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"tests/IfDemo.sol": {
				"IfDemo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "andCondition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "tierCondition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/IfDemo.sol\":67:454  contract IfDemo {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/IfDemo.sol\":67:454  contract IfDemo {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x07c26710\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd6238a42\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tests/IfDemo.sol\":257:452  function tierCondition(uint256 a, uint256 b) public pure returns (uint256){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/IfDemo.sol\":90:251  function andCondition(uint256 a, uint256 b) public pure returns (uint256) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/IfDemo.sol\":257:452  function tierCondition(uint256 a, uint256 b) public pure returns (uint256){... */\n    tag_8:\n        /* \"tests/IfDemo.sol\":323:330  uint256 */\n      0x00\n        /* \"tests/IfDemo.sol\":349:350  1 */\n      0x01\n        /* \"tests/IfDemo.sol\":345:346  a */\n      dup4\n        /* \"tests/IfDemo.sol\":345:350  a > 1 */\n      gt\n        /* \"tests/IfDemo.sol\":341:428  if (a > 1) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"tests/IfDemo.sol\":374:375  1 */\n      0x01\n        /* \"tests/IfDemo.sol\":370:371  b */\n      dup3\n        /* \"tests/IfDemo.sol\":370:375  b > 1 */\n      gt\n        /* \"tests/IfDemo.sol\":366:418  if (b > 1) {... */\n      iszero\n      tag_17\n      jumpi\n        /* \"tests/IfDemo.sol\":402:403  a */\n      dup3\n        /* \"tests/IfDemo.sol\":395:403  return a */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"tests/IfDemo.sol\":366:418  if (b > 1) {... */\n    tag_17:\n        /* \"tests/IfDemo.sol\":341:428  if (a > 1) {... */\n    tag_16:\n        /* \"tests/IfDemo.sol\":444:445  0 */\n      0x00\n        /* \"tests/IfDemo.sol\":437:445  return 0 */\n      swap1\n      pop\n        /* \"tests/IfDemo.sol\":257:452  function tierCondition(uint256 a, uint256 b) public pure returns (uint256){... */\n    tag_15:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"tests/IfDemo.sol\":90:251  function andCondition(uint256 a, uint256 b) public pure returns (uint256) {... */\n    tag_13:\n        /* \"tests/IfDemo.sol\":155:162  uint256 */\n      0x00\n        /* \"tests/IfDemo.sol\":182:183  1 */\n      0x01\n        /* \"tests/IfDemo.sol\":178:179  a */\n      dup4\n        /* \"tests/IfDemo.sol\":178:183  a > 1 */\n      gt\n        /* \"tests/IfDemo.sol\":178:192  a > 1 && b > 1 */\n      dup1\n      iszero\n      tag_19\n      jumpi\n      pop\n        /* \"tests/IfDemo.sol\":191:192  1 */\n      0x01\n        /* \"tests/IfDemo.sol\":187:188  b */\n      dup3\n        /* \"tests/IfDemo.sol\":187:192  b > 1 */\n      gt\n        /* \"tests/IfDemo.sol\":178:192  a > 1 && b > 1 */\n    tag_19:\n        /* \"tests/IfDemo.sol\":174:227  if (a > 1 && b > 1) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"tests/IfDemo.sol\":215:216  a */\n      dup3\n        /* \"tests/IfDemo.sol\":208:216  return a */\n      swap1\n      pop\n      jump(tag_18)\n        /* \"tests/IfDemo.sol\":174:227  if (a > 1 && b > 1) {... */\n    tag_20:\n        /* \"tests/IfDemo.sol\":243:244  0 */\n      0x00\n        /* \"tests/IfDemo.sol\":236:244  return 0 */\n      swap1\n      pop\n        /* \"tests/IfDemo.sol\":90:251  function andCondition(uint256 a, uint256 b) public pure returns (uint256) {... */\n    tag_18:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_24:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_25:\n        /* \"#utility.yul\":490:514   */\n      tag_34\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_24\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_35:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_26:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_37\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_25\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_7:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_40\n      tag_22\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":783:902   */\n    tag_39:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_41\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_42\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_26\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_27:\n        /* \"#utility.yul\":1257:1281   */\n      tag_44\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_24\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1516   */\n    tag_10:\n        /* \"#utility.yul\":1387:1391   */\n      0x00\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1414:1423   */\n      dup3\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1402:1428   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1509   */\n      tag_46\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1495:1504   */\n      dup4\n        /* \"#utility.yul\":1491:1508   */\n      add\n        /* \"#utility.yul\":1482:1488   */\n      dup5\n        /* \"#utility.yul\":1438:1509   */\n      tag_27\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1294:1516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204934ad42cf6d52cd232b3ece3854745ead162c3396ac24736d14554bc2b0d7c264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806307c267101461003b578063d6238a421461006b575b600080fd5b61005560048036038101906100509190610128565b61009b565b6040516100629190610177565b60405180910390f35b61008560048036038101906100809190610128565b6100c3565b6040516100929190610177565b60405180910390f35b600060018311156100b85760018211156100b7578290506100bd565b5b600090505b92915050565b60006001831180156100d55750600182115b156100e2578290506100e7565b600090505b92915050565b600080fd5b6000819050919050565b610105816100f2565b811461011057600080fd5b50565b600081359050610122816100fc565b92915050565b6000806040838503121561013f5761013e6100ed565b5b600061014d85828601610113565b925050602061015e85828601610113565b9150509250929050565b610171816100f2565b82525050565b600060208201905061018c6000830184610168565b9291505056fea26469706673582212204934ad42cf6d52cd232b3ece3854745ead162c3396ac24736d14554bc2b0d7c264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C26710 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD6238A42 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 GT ISZERO PUSH2 0xB8 JUMPI PUSH1 0x1 DUP3 GT ISZERO PUSH2 0xB7 JUMPI DUP3 SWAP1 POP PUSH2 0xBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 GT DUP1 ISZERO PUSH2 0xD5 JUMPI POP PUSH1 0x1 DUP3 GT JUMPDEST ISZERO PUSH2 0xE2 JUMPI DUP3 SWAP1 POP PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xF2 JUMP JUMPDEST DUP2 EQ PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x122 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F JUMPI PUSH2 0x13E PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D DUP6 DUP3 DUP7 ADD PUSH2 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E DUP6 DUP3 DUP7 ADD PUSH2 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0xF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 CALLVALUE 0xAD TIMESTAMP 0xCF PUSH14 0x52CD232B3ECE3854745EAD162C33 SWAP7 0xAC 0x24 PUSH20 0x6D14554BC2B0D7C264736F6C634300080F003300 ",
							"sourceMap": "67:387:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@andCondition_24": {
									"entryPoint": 195,
									"id": 24,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tierCondition_48": {
									"entryPoint": 155,
									"id": 48,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1519:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													}
												],
												"src": "1170:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1438:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1387:4:1",
														"type": ""
													}
												],
												"src": "1294:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806307c267101461003b578063d6238a421461006b575b600080fd5b61005560048036038101906100509190610128565b61009b565b6040516100629190610177565b60405180910390f35b61008560048036038101906100809190610128565b6100c3565b6040516100929190610177565b60405180910390f35b600060018311156100b85760018211156100b7578290506100bd565b5b600090505b92915050565b60006001831180156100d55750600182115b156100e2578290506100e7565b600090505b92915050565b600080fd5b6000819050919050565b610105816100f2565b811461011057600080fd5b50565b600081359050610122816100fc565b92915050565b6000806040838503121561013f5761013e6100ed565b5b600061014d85828601610113565b925050602061015e85828601610113565b9150509250929050565b610171816100f2565b82525050565b600060208201905061018c6000830184610168565b9291505056fea26469706673582212204934ad42cf6d52cd232b3ece3854745ead162c3396ac24736d14554bc2b0d7c264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C26710 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD6238A42 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 GT ISZERO PUSH2 0xB8 JUMPI PUSH1 0x1 DUP3 GT ISZERO PUSH2 0xB7 JUMPI DUP3 SWAP1 POP PUSH2 0xBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 GT DUP1 ISZERO PUSH2 0xD5 JUMPI POP PUSH1 0x1 DUP3 GT JUMPDEST ISZERO PUSH2 0xE2 JUMPI DUP3 SWAP1 POP PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xF2 JUMP JUMPDEST DUP2 EQ PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x122 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F JUMPI PUSH2 0x13E PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D DUP6 DUP3 DUP7 ADD PUSH2 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E DUP6 DUP3 DUP7 ADD PUSH2 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0xF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 CALLVALUE 0xAD TIMESTAMP 0xCF PUSH14 0x52CD232B3ECE3854745EAD162C33 SWAP7 0xAC 0x24 PUSH20 0x6D14554BC2B0D7C264736F6C634300080F003300 ",
							"sourceMap": "67:387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:195;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;90:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:195;323:7;349:1;345;:5;341:87;;;374:1;370;:5;366:52;;;402:1;395:8;;;;366:52;341:87;444:1;437:8;;257:195;;;;;:::o;90:161::-;155:7;182:1;178;:5;:14;;;;;191:1;187;:5;178:14;174:53;;;215:1;208:8;;;;174:53;243:1;236:8;;90:161;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "91200",
								"executionCost": "141",
								"totalCost": "91341"
							},
							"external": {
								"andCondition(uint256,uint256)": "infinite",
								"tierCondition(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 67,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 454,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204934ad42cf6d52cd232b3ece3854745ead162c3396ac24736d14554bc2b0d7c264736f6c634300080f0033",
									".code": [
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "7C26710"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "D6238A42"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 257,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 345,
											"end": 350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 341,
											"end": 428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 341,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 341,
											"end": 428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 366,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 395,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 395,
											"end": 403,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 341,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 257,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 178,
											"end": 183,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 178,
											"end": 192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 178,
											"end": 192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 178,
											"end": 192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 192,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 178,
											"end": 192,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 178,
											"end": 192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 215,
											"end": 216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 208,
											"end": 216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 208,
											"end": 216,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 243,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1438,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"tests/IfDemo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"andCondition(uint256,uint256)": "d6238a42",
							"tierCondition(uint256,uint256)": "07c26710"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"andCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"tierCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/IfDemo.sol\":\"IfDemo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"tests/IfDemo.sol\":{\"keccak256\":\"0x035893efef10fee004b3efa1fdaf70f8030df699747bb65a00636d876fa556c6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0775b2149bdfc03051faa78cf2373b7d65f23d851ca980d7c0e1ef96698ae73d\",\"dweb:/ipfs/Qmcw78sZwwKdJCCCEUkqfMp7B7PiCR2b2SQQvLHMqRtX9V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"tests/IfDemo.sol": {
				"ast": {
					"absolutePath": "tests/IfDemo.sol",
					"exportedSymbols": {
						"IfDemo": [
							49
						]
					},
					"id": 50,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IfDemo",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "IfDemo",
							"nameLocation": "76:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "164:87:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 10,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "178:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31",
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "182:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "178:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 13,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "191:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "187:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "178:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"nodeType": "IfStatement",
												"src": "174:53:0",
												"trueBody": {
													"id": 19,
													"nodeType": "Block",
													"src": "194:33:0",
													"statements": [
														{
															"expression": {
																"id": 17,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "215:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 9,
															"id": 18,
															"nodeType": "Return",
															"src": "208:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "243:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 9,
												"id": 22,
												"nodeType": "Return",
												"src": "236:8:0"
											}
										]
									},
									"functionSelector": "d6238a42",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "andCondition",
									"nameLocation": "99:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "120:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "112:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "131:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:9:0"
									},
									"scope": 49,
									"src": "90:161:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "331:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 33,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "345:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "349:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "341:87:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "352:76:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 36,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "370:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 42,
															"nodeType": "IfStatement",
															"src": "366:52:0",
															"trueBody": {
																"id": 41,
																"nodeType": "Block",
																"src": "377:41:0",
																"statements": [
																	{
																		"expression": {
																			"id": 39,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "402:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 32,
																		"id": 40,
																		"nodeType": "Return",
																		"src": "395:8:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "444:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 32,
												"id": 46,
												"nodeType": "Return",
												"src": "437:8:0"
											}
										]
									},
									"functionSelector": "07c26710",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tierCondition",
									"nameLocation": "266:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "288:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "280:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "299:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "291:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:22:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "323:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:9:0"
									},
									"scope": 49,
									"src": "257:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 50,
							"src": "67:387:0",
							"usedErrors": []
						}
					],
					"src": "42:412:0"
				},
				"id": 0
			}
		}
	}
}