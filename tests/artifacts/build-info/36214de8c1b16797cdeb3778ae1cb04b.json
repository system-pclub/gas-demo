{
	"id": "36214de8c1b16797cdeb3778ae1cb04b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/BoolDemo.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.15;\n\n\ncontract ReentrancyGuard1 {\n\n   /**\n    * @dev We use a single lock for the whole contract.\n    */\n    bool private reentrancyLock = false;\n\n   /**\n    * @dev Prevents a contract from calling itself, directly or indirectly.\n    * If you mark a function `nonReentrant`, you should also\n    * mark it `external`. Calling one `nonReentrant` function from\n    * another is not supported. Instead, you can implement a\n    * `private` function doing the actual work, and an `external`\n    * wrapper marked as `nonReentrant`.\n    */\n    modifier nonReentrant() {\n        require(!reentrancyLock);\n        reentrancyLock = true;\n        _;\n        reentrancyLock = false;\n    }\n\n    function test() public nonReentrant returns(uint) {\n        return 1 + 2;\n    }\n\n}\n\n\ncontract ReentrancyGuard2 {\n\n    /// @dev Constant for unlocked guard state - non-zero to prevent extra gas costs.\n    /// See: https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1056\n    uint private constant REENTRANCY_GUARD_FREE = 1;\n\n    /// @dev Constant for locked guard state\n    uint private constant REENTRANCY_GUARD_LOCKED = 2;\n\n    /**\n    * @dev We use a single lock for the whole contract.\n    */\n    uint private reentrancyLock = REENTRANCY_GUARD_FREE;\n\n    /**\n    * @dev Prevents a contract from calling itself, directly or indirectly.\n    * If you mark a function `nonReentrant`, you should also\n    * mark it `external`. Calling one `nonReentrant` function from\n    * another is not supported. Instead, you can implement a\n    * `private` function doing the actual work, and an `external`\n    * wrapper marked as `nonReentrant`.\n    */\n    modifier nonReentrant() {\n        require(reentrancyLock == REENTRANCY_GUARD_FREE);\n        reentrancyLock = REENTRANCY_GUARD_LOCKED;\n        _;\n        reentrancyLock = REENTRANCY_GUARD_FREE;\n    }\n\n    function test() public nonReentrant returns (uint) {\n        return 1 + 2;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"tests/BoolDemo.sol": {
				"ReentrancyGuard1": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"reentrancyLock": {
								"details": "We use a single lock for the whole contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/BoolDemo.sol\":68:825  contract ReentrancyGuard1 {... */\n  mstore(0x40, 0x80)\n    /* \"tests/BoolDemo.sol\":201:206  false */\n  0x00\n    /* \"tests/BoolDemo.sol\":171:206  bool private reentrancyLock = false */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"tests/BoolDemo.sol\":68:825  contract ReentrancyGuard1 {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/BoolDemo.sol\":68:825  contract ReentrancyGuard1 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tests/BoolDemo.sol\":743:822  function test() public nonReentrant returns(uint) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"tests/BoolDemo.sol\":787:791  uint */\n      0x00\n        /* \"tests/BoolDemo.sol\":641:655  reentrancyLock */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"tests/BoolDemo.sol\":640:655  !reentrancyLock */\n      iszero\n        /* \"tests/BoolDemo.sol\":632:656  require(!reentrancyLock) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"tests/BoolDemo.sol\":683:687  true */\n      0x01\n        /* \"tests/BoolDemo.sol\":666:680  reentrancyLock */\n      0x00\n      dup1\n        /* \"tests/BoolDemo.sol\":666:687  reentrancyLock = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"tests/BoolDemo.sol\":810:815  1 + 2 */\n      0x03\n        /* \"tests/BoolDemo.sol\":803:815  return 1 + 2 */\n      swap1\n      pop\n        /* \"tests/BoolDemo.sol\":725:730  false */\n      0x00\n        /* \"tests/BoolDemo.sol\":708:722  reentrancyLock */\n      dup1\n      0x00\n        /* \"tests/BoolDemo.sol\":708:730  reentrancyLock = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"tests/BoolDemo.sol\":743:822  function test() public nonReentrant returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_11:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_12:\n        /* \"#utility.yul\":177:201   */\n      tag_16\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_11\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_7:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_18\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205ee7d78a07167db039a1fe7cd4dea7f347c5d7ac1cef5797e31c5c7e8ab12c9c64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506101028061003a6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336047565b604051603e919060b3565b60405180910390f35b60008060009054906101000a900460ff1615606157600080fd5b60016000806101000a81548160ff0219169083151502179055506003905060008060006101000a81548160ff02191690831515021790555090565b6000819050919050565b60ad81609c565b82525050565b600060208201905060c6600083018460a6565b9291505056fea26469706673582212205ee7d78a07167db039a1fe7cd4dea7f347c5d7ac1cef5797e31c5c7e8ab12c9c64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 DUP1 PUSH2 0x3A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xAD DUP2 PUSH1 0x9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xE7 0xD7 DUP11 SMOD AND PUSH30 0xB039A1FE7CD4DEA7F347C5D7AC1CEF5797E31C5C7E8AB12C9C64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "68:757:0:-:0;;;201:5;171:35;;;;;;;;;;;;;;;;;;;;68:757;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_35": {
									"entryPoint": 71,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336047565b604051603e919060b3565b60405180910390f35b60008060009054906101000a900460ff1615606157600080fd5b60016000806101000a81548160ff0219169083151502179055506003905060008060006101000a81548160ff02191690831515021790555090565b6000819050919050565b60ad81609c565b82525050565b600060208201905060c6600083018460a6565b9291505056fea26469706673582212205ee7d78a07167db039a1fe7cd4dea7f347c5d7ac1cef5797e31c5c7e8ab12c9c64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xAD DUP2 PUSH1 0x9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xE7 0xD7 DUP11 SMOD AND PUSH30 0xB039A1FE7CD4DEA7F347C5D7AC1CEF5797E31C5C7E8AB12C9C64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "68:757:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;787:4;641:14;;;;;;;;;;;640:15;632:24;;;;;;683:4;666:14;;:21;;;;;;;;;;;;;;;;;;810:5:::1;803:12;;725:5:::0;708:14;;:22;;;;;;;;;;;;;;;;;;743:79;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "51600",
								"executionCost": "24372",
								"totalCost": "75972"
							},
							"external": {
								"test()": "51005"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 171,
									"end": 206,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 171,
									"end": 206,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 68,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 825,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ee7d78a07167db039a1fe7cd4dea7f347c5d7ac1cef5797e31c5c7e8ab12c9c64736f6c634300080f0033",
									".code": [
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 743,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 743,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 743,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 655,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 641,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 641,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 640,
											"end": 655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 656,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 632,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 666,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 803,
											"end": 815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 708,
											"end": 730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 708,
											"end": 730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"tests/BoolDemo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"reentrancyLock\":{\"details\":\"We use a single lock for the whole contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/BoolDemo.sol\":\"ReentrancyGuard1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"tests/BoolDemo.sol\":{\"keccak256\":\"0x7ca406806321cc2ac3b60b02263bac5cea6ef81845a19e603604c354612ba50c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ce1bdd11e8c3cd6762b34e3fc31eba321776c572b5613ec5e5ee9bc8193d9df7\",\"dweb:/ipfs/QmUPMv2DiSmwU62MyuGdGRcgbDRQW1LXJGz2PwQAFxeoT1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "tests/BoolDemo.sol:ReentrancyGuard1",
								"label": "reentrancyLock",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard2": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"REENTRANCY_GUARD_FREE": {
								"details": "Constant for unlocked guard state - non-zero to prevent extra gas costs. See: https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1056"
							},
							"REENTRANCY_GUARD_LOCKED": {
								"details": "Constant for locked guard state"
							},
							"reentrancyLock": {
								"details": "We use a single lock for the whole contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/BoolDemo.sol\":828:1983  contract ReentrancyGuard2 {... */\n  mstore(0x40, 0x80)\n    /* \"tests/BoolDemo.sol\":1072:1073  1 */\n  0x01\n    /* \"tests/BoolDemo.sol\":1252:1303  uint private reentrancyLock = REENTRANCY_GUARD_FREE */\n  0x00\n  sstore\n    /* \"tests/BoolDemo.sol\":828:1983  contract ReentrancyGuard2 {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/BoolDemo.sol\":828:1983  contract ReentrancyGuard2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tests/BoolDemo.sol\":1900:1980  function test() public nonReentrant returns (uint) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"tests/BoolDemo.sol\":1945:1949  uint */\n      0x00\n        /* \"tests/BoolDemo.sol\":1072:1073  1 */\n      0x01\n        /* \"tests/BoolDemo.sol\":1738:1752  reentrancyLock */\n      sload(0x00)\n        /* \"tests/BoolDemo.sol\":1738:1777  reentrancyLock == REENTRANCY_GUARD_FREE */\n      eq\n        /* \"tests/BoolDemo.sol\":1730:1778  require(reentrancyLock == REENTRANCY_GUARD_FREE) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"tests/BoolDemo.sol\":1173:1174  2 */\n      0x02\n        /* \"tests/BoolDemo.sol\":1788:1802  reentrancyLock */\n      0x00\n        /* \"tests/BoolDemo.sol\":1788:1828  reentrancyLock = REENTRANCY_GUARD_LOCKED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tests/BoolDemo.sol\":1968:1973  1 + 2 */\n      0x03\n        /* \"tests/BoolDemo.sol\":1961:1973  return 1 + 2 */\n      swap1\n      pop\n        /* \"tests/BoolDemo.sol\":1072:1073  1 */\n      0x01\n        /* \"tests/BoolDemo.sol\":1849:1863  reentrancyLock */\n      0x00\n        /* \"tests/BoolDemo.sol\":1849:1887  reentrancyLock = REENTRANCY_GUARD_FREE */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tests/BoolDemo.sol\":1900:1980  function test() public nonReentrant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_11:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_12:\n        /* \"#utility.yul\":177:201   */\n      tag_16\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_11\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_7:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_18\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a157466c36599d1af0e213432ba741fd6b54b6b2bd7c4e1a160aa94d09f2cc2164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600160005534801561001557600080fd5b5060d4806100246000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336047565b604051603e91906085565b60405180910390f35b6000600160005414605757600080fd5b600260008190555060039050600160008190555090565b6000819050919050565b607f81606e565b82525050565b6000602082019050609860008301846078565b9291505056fea2646970667358221220a157466c36599d1af0e213432ba741fd6b54b6b2bd7c4e1a160aa94d09f2cc2164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD4 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD EQ PUSH1 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7F DUP2 PUSH1 0x6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x98 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 JUMPI CHAINID PUSH13 0x36599D1AF0E213432BA741FD6B SLOAD 0xB6 0xB2 0xBD PUSH29 0x4E1A160AA94D09F2CC2164736F6C634300080F00330000000000000000 ",
							"sourceMap": "828:1155:0:-:0;;;1072:1;1252:51;;828:1155;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_79": {
									"entryPoint": 71,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336047565b604051603e91906085565b60405180910390f35b6000600160005414605757600080fd5b600260008190555060039050600160008190555090565b6000819050919050565b607f81606e565b82525050565b6000602082019050609860008301846078565b9291505056fea2646970667358221220a157466c36599d1af0e213432ba741fd6b54b6b2bd7c4e1a160aa94d09f2cc2164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD EQ PUSH1 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7F DUP2 PUSH1 0x6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x98 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 JUMPI CHAINID PUSH13 0x36599D1AF0E213432BA741FD6B SLOAD 0xB6 0xB2 0xBD PUSH29 0x4E1A160AA94D09F2CC2164736F6C634300080F00330000000000000000 ",
							"sourceMap": "828:1155:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1945:4;1072:1;1738:14;;:39;1730:48;;;;;;1173:1;1788:14;:40;;;;1968:5:::1;1961:12;;1072:1:::0;1849:14;:38;;;;1900:80;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "42400",
								"executionCost": "22199",
								"totalCost": "64599"
							},
							"external": {
								"test()": "29566"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1072,
									"end": 1073,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1252,
									"end": 1303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1303,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 1983,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a157466c36599d1af0e213432ba741fd6b54b6b2bd7c4e1a160aa94d09f2cc2164736f6c634300080f0033",
									".code": [
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 1983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1900,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1900,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1730,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1788,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1961,
											"end": 1973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1961,
											"end": 1973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1887,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"tests/BoolDemo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"REENTRANCY_GUARD_FREE\":{\"details\":\"Constant for unlocked guard state - non-zero to prevent extra gas costs. See: https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1056\"},\"REENTRANCY_GUARD_LOCKED\":{\"details\":\"Constant for locked guard state\"},\"reentrancyLock\":{\"details\":\"We use a single lock for the whole contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/BoolDemo.sol\":\"ReentrancyGuard2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"tests/BoolDemo.sol\":{\"keccak256\":\"0x7ca406806321cc2ac3b60b02263bac5cea6ef81845a19e603604c354612ba50c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ce1bdd11e8c3cd6762b34e3fc31eba321776c572b5613ec5e5ee9bc8193d9df7\",\"dweb:/ipfs/QmUPMv2DiSmwU62MyuGdGRcgbDRQW1LXJGz2PwQAFxeoT1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 48,
								"contract": "tests/BoolDemo.sol:ReentrancyGuard2",
								"label": "reentrancyLock",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"tests/BoolDemo.sol": {
				"ast": {
					"absolutePath": "tests/BoolDemo.sol",
					"exportedSymbols": {
						"ReentrancyGuard1": [
							36
						],
						"ReentrancyGuard2": [
							80
						]
					},
					"id": 81,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "ReentrancyGuard1",
							"nameLocation": "77:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "100:66:0",
										"text": " @dev We use a single lock for the whole contract."
									},
									"id": 5,
									"mutability": "mutable",
									"name": "reentrancyLock",
									"nameLocation": "184:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "171:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "171:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "201:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "622:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "640:15:0",
															"subExpression": {
																"id": 9,
																"name": "reentrancyLock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "641:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "632:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "632:24:0"
											},
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "reentrancyLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "666:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "683:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "666:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "666:21:0"
											},
											{
												"id": 17,
												"nodeType": "PlaceholderStatement",
												"src": "697:1:0"
											},
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "reentrancyLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "708:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "725:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "708:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "708:22:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "212:381:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n If you mark a function `nonReentrant`, you should also\n mark it `external`. Calling one `nonReentrant` function from\n another is not supported. Instead, you can implement a\n `private` function doing the actual work, and an `external`\n wrapper marked as `nonReentrant`."
									},
									"id": 23,
									"name": "nonReentrant",
									"nameLocation": "607:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:0"
									},
									"src": "598:139:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "793:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "810:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "32",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "814:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													}
												},
												"functionReturnParameters": 29,
												"id": 33,
												"nodeType": "Return",
												"src": "803:12:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 26,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 25,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "766:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "766:12:0"
										}
									],
									"name": "test",
									"nameLocation": "752:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "787:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:6:0"
									},
									"scope": 36,
									"src": "743:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 81,
							"src": "68:757:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "ReentrancyGuard2",
							"nameLocation": "837:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "861:160:0",
										"text": "@dev Constant for unlocked guard state - non-zero to prevent extra gas costs.\n See: https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1056"
									},
									"id": 40,
									"mutability": "constant",
									"name": "REENTRANCY_GUARD_FREE",
									"nameLocation": "1048:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "1026:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1026:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1072:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1080:40:0",
										"text": "@dev Constant for locked guard state"
									},
									"id": 44,
									"mutability": "constant",
									"name": "REENTRANCY_GUARD_LOCKED",
									"nameLocation": "1147:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "1125:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 42,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1125:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1173:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1181:66:0",
										"text": " @dev We use a single lock for the whole contract."
									},
									"id": 48,
									"mutability": "mutable",
									"name": "reentrancyLock",
									"nameLocation": "1265:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "1252:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1252:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 47,
										"name": "REENTRANCY_GUARD_FREE",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 40,
										"src": "1282:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1720:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 52,
																"name": "reentrancyLock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1738:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 53,
																"name": "REENTRANCY_GUARD_FREE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "1756:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1738:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 51,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1730:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1730:48:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "reentrancyLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1788:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "REENTRANCY_GUARD_LOCKED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1805:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1788:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1788:40:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "1838:1:0"
											},
											{
												"expression": {
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 62,
														"name": "reentrancyLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1849:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 63,
														"name": "REENTRANCY_GUARD_FREE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1866:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1849:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1849:38:0"
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1310:381:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n If you mark a function `nonReentrant`, you should also\n mark it `external`. Calling one `nonReentrant` function from\n another is not supported. Instead, you can implement a\n `private` function doing the actual work, and an `external`\n wrapper marked as `nonReentrant`."
									},
									"id": 67,
									"name": "nonReentrant",
									"nameLocation": "1705:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1717:2:0"
									},
									"src": "1696:198:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1951:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "32",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1972:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1968:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													}
												},
												"functionReturnParameters": 73,
												"id": 77,
												"nodeType": "Return",
												"src": "1961:12:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "1923:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1923:12:0"
										}
									],
									"name": "test",
									"nameLocation": "1909:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1945:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:6:0"
									},
									"scope": 80,
									"src": "1900:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 81,
							"src": "828:1155:0",
							"usedErrors": []
						}
					],
					"src": "42:1941:0"
				},
				"id": 0
			}
		}
	}
}